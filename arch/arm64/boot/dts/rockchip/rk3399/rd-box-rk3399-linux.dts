/dts-v1/;

#include "rp-rk3399-board.dtsi"

#include "rp-pmu-rk808.dtsi"
#include "rp-audio-rt5640.dtsi"

#include "rp-usb2-host0.dtsi"
#include "rp-usb2-host1.dtsi"
#include "rp-usb3-otg-typeA.dtsi"
//#include "rp-usb3-otg-typeC.dtsi"
#include "rp-usb3_1-host.dtsi"

#include "rp-gpio-key.dtsi"
#include "rp-adc-key.dtsi"      

#include "rp-gmac.dtsi"    

#include "rp-mipi-ov13850-camera.dtsi"
//#include "rp-hdmiin.dtsi"

#include "rp-pcie.dtsi"

#include "rp-wifi-sdio.dtsi"

#include "rp-bt-uart0.dtsi"

#include "rp-sdcard-mmc1.dtsi"

/** lcd configuration */
//#include "rp-lcd-hdmi.dtsi"
#include "rp-lcd-mipi-5.5-720-1280-v2.dtsi"
//#include "rp-lcd-mipi-5-720-1280-v2-boxTP.dtsi"
//#include "rp-lcd-mipi-7-720-1280-jc070hd005-v1.dtsi"
//#include "rp-lcd-mipi-8-800-1280-v3.dtsi"
//#include "rp-lcd-mipi-8-1200-1920.dtsi"
//#include "rp-lcd-mipi-10-800-1280-v2.dtsi"
//#include "rp-lcd-mipi-10-800-1280-v3.dtsi"
//#include "rd-box-lcd-edp-13.3-15.6-1920-1080.dtsi"




/ {

        model = "rd-box-rk3399";
        compatible = "rpdzkj,rd-box-rk3399", "rockchip,rk3399";

        
        rp_power{
            compatible = "rp_power";
        rp_not_deep_sleep = <1>;
            status = "okay";
            
           /* 
         * #define GPIO_FUNCTION_OUTPUT 0
         * #define GPIO_FUNCTION_INPUT 1
         * #define GPIO_FUNCTION_IRQ 2
         * #define GPIO_FUNCTION_FLASH 3
         * #define GPIO_FUNCTION_OUTPUT_CTRL 4 //output and creat proc ctrl
         * 
         * you can define the gpio function as above
         * on gpio_function = <>;
     *
     *If you want to set the uboot to high level, add the lower properties
     *    regulator_uboot_on    
         */                

            fan_en {    //fan
                gpio_num = <&gpio1 RK_PC2 GPIO_ACTIVE_HIGH>;
                gpio_function = <4>;
                regulator_uboot_on;
            };
   
            hub_rst {   // usb hub reset pin
                gpio_num = <&gpio1 RK_PD0 GPIO_ACTIVE_HIGH>;
                gpio_function = <4>;
                regulator_uboot_on;
            };
            
            breath-led {    //run led
                gpio_num = <&gpio4 RK_PD0 GPIO_ACTIVE_HIGH>;
                gpio_function = <3>;
                regulator_uboot_on;
            };
            
            vdd-en {    //vdd_5v, vdd_io power en
                gpio_num = <&gpio4 RK_PD6 GPIO_ACTIVE_HIGH>;
                gpio_function = <4>;
                regulator_uboot_on;
            };
            
            vdd_3g {    // 4g module power enable
                gpio_num = <&gpio4 RK_PC6 GPIO_ACTIVE_HIGH>;
                gpio_function = <4>;
                regulator_uboot_on;
            };
            
            host_en {   //usb port power enable
                gpio_num = <&gpio4 RK_PD1 GPIO_ACTIVE_HIGH>;
                gpio_function = <4>;
                regulator_uboot_on;
            };
            
        };

        rp_gpio{
            status = "okay";
            compatible = "rp_gpio";

            /**
             * GPIO example, place you want to control as below
             *
             * gpioxxx {                    // the node name will display on /proc/rp_gpio, you can define any character string
             *      gpio_num = <>;          // gpio you want ot control
             *      gpio_function = <>;     // function of current gpio: 0 output, 1 input, 3 blink per 2S
             *      gpio_event = <KEY_F14>; // optional property used to define gpio report event such as KEY_F14, only works in case of gpio_function = <1>;
             * };
             */

            gpio0a2 {
                gpio_num = <&gpio0 RK_PA2 GPIO_ACTIVE_LOW>;
                gpio_function = <0>;
            };

            gpio1a2 {
                gpio_num = <&gpio1 RK_PA2 GPIO_ACTIVE_LOW>;
                gpio_function = <0>;
            };

            gpio1c7 {
                gpio_num = <&gpio1 RK_PC7 GPIO_ACTIVE_LOW>;
                gpio_function = <0>;
            };

            gpio0b3 {
                gpio_num = <&gpio0 RK_PB3 GPIO_ACTIVE_LOW>;
                gpio_function = <0>;
            };

            gpio3d4 {
                gpio_num = <&gpio3 RK_PD4 GPIO_ACTIVE_LOW>;
                gpio_function = <0>;
            };

            gpio3d5 {
                gpio_num = <&gpio3 RK_PD5 GPIO_ACTIVE_LOW>;
                gpio_function = <0>;
            };

            gpio3d6 {
                gpio_num = <&gpio3 RK_PD6 GPIO_ACTIVE_LOW>;
                gpio_function = <0>;
            };

            gpio4c5 {
                gpio_num = <&gpio4 RK_PC5 GPIO_ACTIVE_LOW>;
                gpio_function = <0>;
            };

            gpio4d3 {
                gpio_num = <&gpio4 RK_PD3 GPIO_ACTIVE_LOW>;
                gpio_function = <0>;
            };
        };
        
};



&io_domains {
        status = "okay";

        bt656-supply = <&vcc_1v8>;              /* bt656_gpio2ab_ms */
        audio-supply = <&vcca1v8_codec>;        /* audio_gpio3d4a_ms */
        sdmmc-supply = <&vcc_sdio>;             /* sdmmc_gpio4b_ms */
        gpio1830-supply = <&vcc_3v0>;           /* gpio1833_gpio4cd_ms */
};

&pmu_io_domains {
        status = "okay";
        pmu1830-supply = <&vcc_1v8>;     //nano usb
};


&rk808 {
    rtc {
        /****** disable rtc-rk808 for use hym8563 */
        status = "disabled";
    };
};

&i2c1 {
        status = "okay";
        i2c-scl-rising-time-ns = <300>;
        i2c-scl-falling-time-ns = <15>;

        rtc-hym8563@51 {
                status = "okay";
                compatible = "haoyu,hym8563";
                reg = <0x51>;
        };
};

//used to bluetooth
&uart0 {
        status = "okay";
        //dma-names = "tx", "rx";
        //dmas = <&dmac_peri 0>, <&dmac_peri 1>;
};

//conflicts to ethernet
&uart1 {
        status = "disabled";
        //dma-names = "tx", "rx";
        //dmas = <&dmac_peri 2>, <&dmac_peri 3>;
};

//conflicts to debugger
&uart2 {
        status = "disabled";
        //dma-names = "tx", "rx";
        //dmas = <&dmac_peri 4>, <&dmac_peri 5>;
};

//conflicts to ethernet
&uart3 {
        status = "disabled";
        //dma-names = "tx", "rx";
        //dmas = <&dmac_peri 6>, <&dmac_peri 7>;
};

&uart4 {
        status = "okay";
        pinctrl-names = "default";
        pinctrl-0 = <&uart4_xfer>;
        dma-names = "tx", "rx";
        dmas = <&dmac_peri 8>, <&dmac_peri 9>;
};

&fiq_debugger {
        rockchip,serial-id = <2>; //uart2
        rockchip,wake-irq = <0>;
        rockchip,irq-mode-enable = <1>;
        compatible = "rockchip,fiq-debugger";
        rockchip,baudrate = <115200>;
        pinctrl-names = "default";
        pinctrl-0 = <&uart2c_xfer>;
};

/*
&spi_wk2xxx{
        status = "okay";
        reset-gpio = <&gpio4 RK_PD5 GPIO_ACTIVE_HIGH>;
        irq-gpio = <&gpio0 RK_PB0 IRQ_TYPE_EDGE_FALLING>;//modify
        cs-gpio = <&gpio1 RK_PB2 GPIO_ACTIVE_HIGH>;
};
*/

